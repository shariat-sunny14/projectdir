"""
Django settings for storeapp project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SESSION_ENGINE = 'django.contrib.sessions.backends.db'
#auto logout time
SESSION_COOKIE_AGE = 1800  # 1800 seconds (30 mins)
SESSION_SAVE_EVERY_REQUEST = False  # Optional, explained below
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Optional, if you want it to expire on browser close

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-()&m4wz70uwi%4rcluy=sq)p7$8=3dhfn353oip@adyu-&dr+!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'crispy_forms',
    'user_auth',
    'organizations',
    'user_setup',
    'item_pos',
    'item_setup',
    'others_setup',
    'supplier_setup',
    'store_setup',
    'opening_stock',
    'invoice_list',
    'module_setup',
    'sales_report',
    'collection_report',
    'refund_due_collection',
    'stock_list',
    'G_R_N_with_without',
    'consumption_report',
    're_order_item',
    'purchase_order',
    'po_receive',
    'po_return',
    'po_return_receive',
    'setup_modes',
    'department',
    'credit_management',
    'b2b_clients_management',
    'drivers_setup',
    'post_order_update',
    'stock_reconciliation',
    'bank_setup',
    'bank_statement',
    'registrations',
    'bill_templates',
    'select_bill_receipt',
    'store_transfers',
    'deliver_chalan',
    'clients_transection',
    'local_purchase',
    'local_purchase_return',
    'manual_return_receive',
    'item_barcode',
    'login_theme',
    'reg_client_collections',
    'statistics_dashboard',
    'jarvis_assistant',
    'third_party_sender',
    'others_collection_reports',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_ratelimit.middleware.RatelimitMiddleware',
    # 
    'user_auth.middleware.SessionTimeoutMiddleware',  # Make sure this path is correct
]

# Rate limit settings
RATELIMIT_VIEW = 'user_auth.views.ratelimited_view'

ROOT_URLCONF = 'storeapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # ...
                'user_auth.loadContext.loadContextData.load_navbar_context_from_json',
                'user_auth.loadContext.loadContextData.load_user_context_from_json',
                # service charge context
                'user_auth.loadContext.loadContextData.load_service_charge_context_from_json',
                # notification context
                'user_auth.loadContext.loadContextData.load_notifications_item_count_from_json',
            ],
        },
    },
]

TEMPLATE_DEBUG = True

WSGI_APPLICATION = 'storeapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Roni Ent DB
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'tboxstoreappweb',
#         'USER': 'postgres',
#         'PASSWORD': 'rootpower2024',
#         'HOST': 'tboxstoreappweb.cdg2kgmg8gbf.ap-southeast-2.rds.amazonaws.com',
#         'PORT': '5432',
#     }
# }

# shafi Ent DB
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'tboxwebstoreapps',
#         'USER': 'postgres',
#         'PASSWORD': 'rootpower2024',
#         'HOST': 'tboxwebstoreapps.czycq6c8g110.ap-south-1.rds.amazonaws.com',
#         'PORT': '5432',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

# Enable Whitenoise to compress static files and serve them
# STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Media files settings
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Add the following line to allow Whitenoise to serve media files
WHITENOISE_ALLOW_ALL_ORIGINS = True

# Disable this header
SECURE_CROSS_ORIGIN_OPENER_POLICY = None

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

AUTH_USER_MODEL = 'user_auth.User'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
